document.addEventListener('DOMContentLoaded', function() {
    // S√©lection des √©l√©ments
    const horseCards = document.querySelectorAll('.horse-card');
    const selectedHorseInput = document.getElementById('selected-horse');
    const reservationForm = document.querySelector('.reservation-form');
    const dateInput = document.getElementById('date');
    const reservationNumber = document.getElementById('reservation-number');
    const periodeSelect = document.getElementById('periode');
    const meteoToast = new bootstrap.Toast(document.getElementById('meteoToast'), {
        autohide: false
    });

    // Configuration de la date minimum (aujourd'hui)
    const today = new Date().toISOString().split('T')[0];
    dateInput.min = today;

    // Fonction pour mettre √† jour la m√©t√©o selon la date
    function updateMeteo(selectedDate) {
        const meteoBody = document.querySelector('.toast-body');
        const date = new Date(selectedDate);
        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = date.toLocaleDateString('fr-FR', options);

        // Simuler diff√©rentes conditions m√©t√©o selon la date
        // En r√©alit√©, vous utiliseriez une API m√©t√©o ici
        const conditions = [
            { icon: '‚òÄÔ∏è', desc: 'Ensoleill√©', temp: '22¬∞C' },
            { icon: '‚õÖ', desc: 'Partiellement nuageux', temp: '19¬∞C' },
            { icon: 'üåßÔ∏è', desc: 'Pluvieux', temp: '15¬∞C' },
            { icon: '‚õàÔ∏è', desc: 'Orageux', temp: '17¬∞C' },
            { icon: '‚òÅÔ∏è', desc: 'Nuageux', temp: '18¬∞C' }
        ];

        // Utiliser la date pour s√©lectionner une condition (simulation)
        const dayIndex = date.getDate() % conditions.length;
        const condition = conditions[dayIndex];

        meteoBody.innerHTML = `
            <div class="meteo-content">
                <h5 class="mb-2">Pr√©visions pour le ${formattedDate}</h5>
                <div class="d-flex align-items-center">
                    <span class="meteo-icon me-3">${condition.icon}</span>
                    <div>
                        <p class="mb-1">${condition.desc}</p>
                        <p class="mb-0">Temp√©rature: ${condition.temp}</p>
                    </div>
                </div>
                ${condition.desc === 'Pluvieux' || condition.desc === 'Orageux' ? 
                    '<div class="alert alert-warning mt-2 mb-0">‚ö†Ô∏è Conditions d√©favorables pour la randonn√©e</div>' : 
                    '<div class="alert alert-success mt-2 mb-0">‚úÖ Conditions favorables pour la randonn√©e</div>'}
            </div>
        `;

        meteoToast.show();
    }

    // √âcouteur d'√©v√©nement pour le changement de date
    dateInput.addEventListener('change', function() {
        if (this.value) {
            updateMeteo(this.value);
        }
    });

    // Gestion de la s√©lection des chevaux
    horseCards.forEach(card => {
        card.addEventListener('click', function() {
            document.querySelector('.horse-card.selected')?.classList.remove('selected');
            this.classList.add('selected');
            const horseName = this.querySelector('p').textContent;
            selectedHorseInput.value = horseName;
            reservationForm.scrollIntoView({ 
                behavior: 'smooth',
                block: 'center'
            });
        });
    });

    // Validation du formulaire
    reservationForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (!reservationNumber.value) {
            alert('Veuillez entrer votre num√©ro de r√©servation du g√Æte');
            reservationNumber.focus();
            return;
        }

        if (!selectedHorseInput.value) {
            alert('Veuillez s√©lectionner un cheval');
            return;
        }

        if (!dateInput.value) {
            alert('Veuillez s√©lectionner une date');
            dateInput.focus();
            return;
        }

        if (!periodeSelect.value) {
            alert('Veuillez s√©lectionner une p√©riode');
            periodeSelect.focus();
            return;
        }

        // V√©rification des conditions m√©t√©o
        const meteoAlert = document.querySelector('.alert-warning');
        if (meteoAlert) {
            if (!confirm('Les conditions m√©t√©o ne sont pas optimales pour cette date. Souhaitez-vous tout de m√™me continuer ?')) {
                return;
            }
        }

        const reservationData = {
            reservationNumber: reservationNumber.value,
            horse: selectedHorseInput.value,
            date: dateInput.value,
            periode: periodeSelect.value
        };

        console.log('Donn√©es de r√©servation:', reservationData);
        alert('R√©servation enregistr√©e avec succ√®s !');
    });
});